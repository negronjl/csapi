// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "CSAPI": Application Contexts
//
// Command:
// $ goagen
// --design=github.com/negronjl/csapi/design
// --out=$(GOPATH)/src/github.com/negronjl/csapi
// --version=v1.2.0-dirty

package app

import (
	"context"
	"github.com/goadesign/goa"
	"net/http"
)

// HealthHealthContext provides the health health action context.
type HealthHealthContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
	Dc       string
	Hgroup   string
	Hostname string
}

// NewHealthHealthContext parses the incoming request URL and body, performs validations and creates the
// context used by the health controller health action.
func NewHealthHealthContext(ctx context.Context, r *http.Request, service *goa.Service) (*HealthHealthContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := HealthHealthContext{Context: ctx, ResponseData: resp, RequestData: req}
	paramDc := req.Params["dc"]
	if len(paramDc) > 0 {
		rawDc := paramDc[0]
		rctx.Dc = rawDc
	}
	paramHgroup := req.Params["hgroup"]
	if len(paramHgroup) > 0 {
		rawHgroup := paramHgroup[0]
		rctx.Hgroup = rawHgroup
	}
	paramHostname := req.Params["hostname"]
	if len(paramHostname) > 0 {
		rawHostname := paramHostname[0]
		rctx.Hostname = rawHostname
	}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *HealthHealthContext) OK(resp []byte) error {
	ctx.ResponseData.Header().Set("Content-Type", "application/json")
	ctx.ResponseData.WriteHeader(200)
	_, err := ctx.ResponseData.Write(resp)
	return err
}

// NotFound sends a HTTP response with status code 404.
func (ctx *HealthHealthContext) NotFound() error {
	ctx.ResponseData.WriteHeader(404)
	return nil
}
