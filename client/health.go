// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "CSAPI": health Resource Client
//
// Command:
// $ goagen
// --design=github.com/negronjl/csapi/design
// --out=$(GOPATH)/src/github.com/negronjl/csapi
// --version=v1.2.0-dirty

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// HealthHealthPath computes a request path to the health action of health.
func HealthHealthPath(dc string, hgroup string, hostname string) string {
	param0 := dc
	param1 := hgroup
	param2 := hostname

	return fmt.Sprintf("/api/v1/health/%s/%s/%s", param0, param1, param2)
}

// Get the health from servers monitored by the requested Zabbix API.  If provided, you can narrow the list of servers down by Host Group or hostname
func (c *Client) HealthHealth(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewHealthHealthRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewHealthHealthRequest create the request corresponding to the health action endpoint of the health resource.
func (c *Client) NewHealthHealthRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
